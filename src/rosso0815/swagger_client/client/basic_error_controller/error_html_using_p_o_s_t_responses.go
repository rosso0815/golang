// Code generated by go-swagger; DO NOT EDIT.

package basic_error_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "pfistera/swagger_client/models"
)

// ErrorHTMLUsingPOSTReader is a Reader for the ErrorHTMLUsingPOST structure.
type ErrorHTMLUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ErrorHTMLUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewErrorHTMLUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewErrorHTMLUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewErrorHTMLUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewErrorHTMLUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewErrorHTMLUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewErrorHTMLUsingPOSTOK creates a ErrorHTMLUsingPOSTOK with default headers values
func NewErrorHTMLUsingPOSTOK() *ErrorHTMLUsingPOSTOK {
	return &ErrorHTMLUsingPOSTOK{}
}

/*ErrorHTMLUsingPOSTOK handles this case with default header values.

OK
*/
type ErrorHTMLUsingPOSTOK struct {
	Payload *models.ModelAndView
}

func (o *ErrorHTMLUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /error][%d] errorHtmlUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *ErrorHTMLUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelAndView)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewErrorHTMLUsingPOSTCreated creates a ErrorHTMLUsingPOSTCreated with default headers values
func NewErrorHTMLUsingPOSTCreated() *ErrorHTMLUsingPOSTCreated {
	return &ErrorHTMLUsingPOSTCreated{}
}

/*ErrorHTMLUsingPOSTCreated handles this case with default header values.

Created
*/
type ErrorHTMLUsingPOSTCreated struct {
}

func (o *ErrorHTMLUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /error][%d] errorHtmlUsingPOSTCreated ", 201)
}

func (o *ErrorHTMLUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewErrorHTMLUsingPOSTUnauthorized creates a ErrorHTMLUsingPOSTUnauthorized with default headers values
func NewErrorHTMLUsingPOSTUnauthorized() *ErrorHTMLUsingPOSTUnauthorized {
	return &ErrorHTMLUsingPOSTUnauthorized{}
}

/*ErrorHTMLUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type ErrorHTMLUsingPOSTUnauthorized struct {
}

func (o *ErrorHTMLUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /error][%d] errorHtmlUsingPOSTUnauthorized ", 401)
}

func (o *ErrorHTMLUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewErrorHTMLUsingPOSTForbidden creates a ErrorHTMLUsingPOSTForbidden with default headers values
func NewErrorHTMLUsingPOSTForbidden() *ErrorHTMLUsingPOSTForbidden {
	return &ErrorHTMLUsingPOSTForbidden{}
}

/*ErrorHTMLUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type ErrorHTMLUsingPOSTForbidden struct {
}

func (o *ErrorHTMLUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /error][%d] errorHtmlUsingPOSTForbidden ", 403)
}

func (o *ErrorHTMLUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewErrorHTMLUsingPOSTNotFound creates a ErrorHTMLUsingPOSTNotFound with default headers values
func NewErrorHTMLUsingPOSTNotFound() *ErrorHTMLUsingPOSTNotFound {
	return &ErrorHTMLUsingPOSTNotFound{}
}

/*ErrorHTMLUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type ErrorHTMLUsingPOSTNotFound struct {
}

func (o *ErrorHTMLUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /error][%d] errorHtmlUsingPOSTNotFound ", 404)
}

func (o *ErrorHTMLUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
